import{_ as n,o as s,c as a,e as p}from"./app.8eeb7f05.js";const t={},o=p(`<h1 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h1><h2 id="\u5BF9\u8C61\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u5C5E\u6027" aria-hidden="true">#</a> \u5BF9\u8C61\u5C5E\u6027</h2><ol><li><p>\u6570\u636E\u5C5E\u6027</p><ul><li>\u4FDD\u5B58\u6570\u636E\u503C\u7684\u4F4D\u7F6E.\u4F1A\u4ECE\u8FD9\u4E2A\u4F4D\u7F6E\u8BFB\u53D6,\u4E5F\u4F1A\u5199\u5165\u5230\u8FD9\u4E2A\u4F4D\u7F6E.</li><li>Configurable: <blockquote><p>\u53EF\u5220\u9664,\u4FEE\u6539\u7279\u6027,\u4FEE\u6539\u662F\u5426\u4E3A\u8BBF\u95EE\u5668\u5C5E\u6027 \u9ED8\u8BA4:true configurable \u4E3A false \u65F6,\u4E0D\u80FD\u4FEE\u6539 writable \u4E4B\u5916\u7684\u7279\u6027 configurable \u4E3A false \u65F6\uFF0Cwritable \u7531 true \u4FEE\u6539\u4E3A false \u6210\u529F configurable \u4E3A false \u65F6\uFF0Cwritable \u7531 false \u4FEE\u6539\u4E3A true \u62A5\u9519</p></blockquote></li><li>Enumerable: <blockquote><p>\u53EF\u904D\u5386 \u9ED8\u8BA4:true</p></blockquote></li><li>Writable: <blockquote><p>\u53EF\u4FEE\u6539 \u9ED8\u8BA4:true</p></blockquote></li><li>Value: <blockquote><p>\u5C5E\u6027\u5B9E\u9645\u503C</p></blockquote></li></ul></li><li><p>\u8BBF\u95EE\u5668\u5C5E\u6027</p><ul><li>\u4E0D\u5305\u542B\u6570\u636E\u503C.\u5305\u542B\u4E00\u4E2A\u83B7\u53D6(getter)\u51FD\u6570\u548C\u4E00\u4E2A\u8BBE\u7F6E(setter)\u51FD\u6570,\u975E\u5FC5\u987B</li><li>Configurable: <blockquote><p>\u53EF\u5220\u9664,\u4FEE\u6539\u7279\u6027,\u4FEE\u6539\u662F\u5426\u4E3A\u8BBF\u95EE\u5668\u5C5E\u6027 \u9ED8\u8BA4:true</p></blockquote></li><li>Enumerable: <blockquote><p>\u53EF\u904D\u5386 \u9ED8\u8BA4:true</p></blockquote></li><li>Get: <blockquote><p>\u83B7\u53D6\u51FD\u6570,\u518D\u8BFB\u53D6\u5C5E\u6027\u65F6\u8C03\u7528.\u9ED8\u8BA4: undefined</p></blockquote></li><li>Set: <blockquote><p>\u8BBE\u7F6E\u51FD\u6570,\u518D\u5199\u5165\u5C5E\u6027\u65F6\u8C03\u7528.\u9ED8\u8BA4: undefined</p></blockquote></li></ul></li><li><p>\u5B9A\u4E49\u4E00\u4E2A\u6216\u591A\u4E2A\u5C5E\u6027\u5C5E\u6027</p><ul><li>Object.defineProperties()</li></ul></li><li><p>\u83B7\u53D6\u6307\u5B9A\u6216\u591A\u4E2A\u5C5E\u6027\u7684\u5C5E\u6027\u4FE1\u606F</p><ul><li>Object.getOwnPropertyDescriptor(object,protoname) / Object.getOwnPropertyDescriptors(object)</li></ul></li></ol><ul><li>\u65B9\u6CD5</li></ul><h2 id="\u5DE5\u5382\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5382\u6A21\u5F0F" aria-hidden="true">#</a> \u5DE5\u5382\u6A21\u5F0F</h2><blockquote><p>\u5DE5\u5382\u6A21\u5F0F\u662F\u4E00\u79CD\u4F17\u6240\u5468\u77E5\u7684\u8BBE\u8BA1\u6A21\u5F0F\uFF0C\u5E7F\u6CDB\u5E94\u7528\u4E8E\u8F6F\u4EF6\u5DE5\u7A0B\u9886\u57DF\uFF0C\u7528\u4E8E\u62BD\u8C61\u521B\u5EFA\u7279\u5B9A\u5BF9\u8C61\u7684\u8FC7\u7A0B\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> job</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  o<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  o<span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  o<span class="token punctuation">.</span>job <span class="token operator">=</span> job<span class="token punctuation">;</span>
  o<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> o<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> person1 <span class="token operator">=</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person2 <span class="token operator">=</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token string">&quot;Greg&quot;</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token string">&quot;Doctor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5DE5\u5382\u6A21\u5F0F\u867D\u7136\u53EF\u4EE5\u89E3\u51B3\u521B\u5EFA\u591A\u4E2A\u7C7B\u4F3C\u5BF9\u8C61\u7684\u95EE\u9898\uFF0C\u4F46\u6CA1\u6709\u89E3\u51B3\u5BF9\u8C61\u6807\u8BC6\u95EE\u9898\uFF08\u5373\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u662F\u4EC0\u4E48\u7C7B\u578B\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u6784\u9020\u51FD\u6570\u6A21\u5F0F</p><blockquote><p>\u6784\u9020\u51FD\u6570\u662F\u7528\u4E8E\u521B\u5EFA\u7279\u5B9A\u7C7B\u578B\u5BF9\u8C61\u3002 Object \u548C Array \u8FD9\u6837\u7684\u539F\u751F\u6784\u9020\u51FD\u6570\uFF0C\u8FD0\u884C\u65F6\u53EF\u4EE5\u76F4\u63A5\u5728\u6267\u884C\u73AF\u5883\u4E2D\u4F7F\u7528 \u5F53\u7136\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u6784\u9020\u51FD\u6570\uFF0C\u4EE5\u51FD\u6570\u7684\u5F62\u5F0F\u4E3A\u81EA\u5DF1\u7684\u5BF9\u8C61\u7C7B\u578B\u5B9A\u4E49\u5C5E\u6027\u548C\u65B9\u6CD5\u3002</p></blockquote><ul><li>\u6CE8\u610F\u4E8B\u9879: <ol><li>\u6784\u9020\u51FD\u6570\u4E5F\u662F\u51FD\u6570 <blockquote><p>\u6784\u9020\u51FD\u6570\u4E0E\u666E\u901A\u51FD\u6570\u552F\u4E00\u7684\u533A\u522B\u5C31\u662F\u8C03\u7528\u65B9\u5F0F\u4E0D\u540C.\u4F7F\u7528 new \u64CD\u4F5C\u7B26\u8C03\u7528\u5C31\u662F\u6784\u9020\u51FD\u6570,\u53CD\u4E4B\u4E3A\u666E\u901A\u51FD\u6570</p></blockquote></li><li>\u6784\u9020\u51FD\u6570\u7684\u95EE\u9898 <blockquote><p>\u5176\u5B9A\u4E49\u7684\u65B9\u6CD5\u4F1A\u5728\u6BCF\u4E2A\u5B9E\u4F8B\u4E0A\u90FD\u521B\u5EFA\u4E00\u904D \u4E24\u4E2A\u4E0D\u540C\u5BF9\u8C61\u7684\u540C\u540D\u65B9\u6CD5\u4E0D\u662F\u540C\u4E00\u4E2A Function \u5B9E\u4F8B - console.log(person1.sayName == person2.sayName); // false</p></blockquote></li></ol></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> job</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>job <span class="token operator">=</span> job<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Greg&quot;</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token string">&quot;Doctor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person1<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Nicholas</span>
person2<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Greg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5DE5\u5382\u6A21\u5F0F \u548C \u6784\u9020\u51FD\u6570\u6A21\u5F0F\u7684\u533A\u522B:</p><ol><li>\u6CA1\u6709\u663E\u5F0F\u5730\u521B\u5EFA\u5BF9\u8C61</li><li>\u5C5E\u6027\u548C\u65B9\u6CD5\u76F4\u63A5\u8D4B\u503C\u7ED9\u4E86 this</li><li>\u6CA1\u6709 return</li></ol></li><li><p>new \u6267\u884C</p><ol><li>\u5728\u5185\u5B58\u4E2D\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61</li><li>\u8FD9\u4E2A \u65B0\u5BF9\u8C61 \u5185\u90E8\u7684[[Prototype]]\u7279\u6027\u88AB\u8D4B\u503C\u4E3A \u6784\u9020\u51FD\u6570 \u7684 prototype \u5C5E\u6027</li><li>\u6784\u9020\u51FD\u6570\u5185\u90E8\u7684 this \u88AB\u8D4B\u503C\u4E3A\u8FD9\u4E2A\u65B0\u5BF9\u8C61\uFF08\u5373 this \u6307\u5411\u65B0\u5BF9\u8C61\uFF09</li><li>\u6267\u884C\u6784\u9020\u51FD\u6570\u5185\u90E8\u7684\u4EE3\u7801\uFF08\u7ED9\u65B0\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027\uFF09</li><li>\u5982\u679C\u6784\u9020\u51FD\u6570\u8FD4\u56DE\u975E\u7A7A\u5BF9\u8C61\uFF0C\u5219\u8FD4\u56DE\u8BE5\u5BF9\u8C61\uFF1B\u5426\u5219\uFF0C\u8FD4\u56DE\u521A\u521B\u5EFA\u7684\u65B0\u5BF9\u8C61</li></ol></li></ul><h2 id="\u539F\u578B\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u6A21\u5F0F" aria-hidden="true">#</a> \u539F\u578B\u6A21\u5F0F</h2><blockquote><p>\u51FD\u6570\u4F1A\u521B\u5EFA\u4E00\u4E2A prototype \u5C5E\u6027\uFF0C\u5C5E\u6027\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5305\u542B\u5B9E\u4F8B\u5171\u4EAB\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// let Person = function() {};</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>job <span class="token operator">=</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person1<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Nicholas&quot;</span>
<span class="token keyword">let</span> person2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person2<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Nicholas&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>sayName <span class="token operator">==</span> person2<span class="token punctuation">.</span>sayName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B" aria-hidden="true">#</a> \u539F\u578B</h2><ul><li>\u6784\u9020\u51FD\u6570\u3001\u539F\u578B\u548C\u5B9E\u4F8B\u7684\u5173\u7CFB: <blockquote><p>\u6BCF\u4E2A\u6784\u9020\u51FD\u6570\u90FD\u6709\u4E00\u4E2A\u539F\u578B\u5BF9\u8C61\uFF0C\u539F\u578B\u6709\u4E00\u4E2A\u5C5E\u6027\u6307\u56DE\u6784\u9020\u51FD\u6570\uFF0C\u800C\u5B9E\u4F8B\u6709\u4E00\u4E2A\u5185\u90E8\u6307\u9488\u6307\u5411\u539F\u578B</p></blockquote></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6784\u9020\u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">let</span> <span class="token function-variable function">Person</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u58F0\u660E\u4E4B\u540E\u5C31\u6709\u4E00\u4E2A\u4E0E\u6784\u9020\u51FD\u6570\u76F8\u5173\u8054\u7684\u539F\u578B\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {constructor: \u0192}</span>
<span class="token comment">// person\u539F\u578B\u5BF9\u8C61\u7684constructor \u4E0E Person\u6784\u9020\u51FD\u6570 \u5FAA\u73AF\u5F15\u7528</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">===</span> person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// Person\u539F\u578B\u5BF9\u8C61 \u6307\u5411 Object\u539F\u578B\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// Person\u539F\u578B\u5BF9\u8C61 \u539F\u578B\u6307\u5411 Object \u6784\u9020\u51FD\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> Object<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// Person\u539F\u578B\u5BF9\u8C61\u539F\u578B\u7684\u539F\u578B \u6307\u5411 null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token keyword">let</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6784\u9020\u51FD\u6570,\u539F\u578B\u5BF9\u8C61,\u5B9E\u4F8B \u662F\u4E09\u4E2A\u4E0D\u540C\u7684\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1 <span class="token operator">!==</span> Person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1 <span class="token operator">!==</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype <span class="token operator">!==</span> Person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// person1\u5B9E\u4F8B\u7684\u539F\u578B\u5BF9\u8C61 \u4E0E Person\u539F\u578B\u5BF9\u8C61\u76F8\u5173\u8054</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// person1\u5B9E\u4F8B\u7684\u539F\u578B\u5BF9\u8C61\u6784\u9020\u51FD\u6570 \u4E0E Person\u539F\u578B\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570\u76F8\u5173\u8054</span>
conosle<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> Person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// \u540C\u6784\u9020\u51FD\u6570\u521B\u5EFA\u7684\u5B9E\u4F8B\u5171\u4EAB\u4E00\u4E2A\u539F\u578B\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> person2<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u68C0\u6D4B\u5B9E\u4F8B\u662F\u5426\u5B58\u5728\u4E8E\u539F\u578B\u5BF9\u8C61 - isPrototypeOf</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">Test</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">isPrototypeOf</span><span class="token punctuation">(</span>test1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">isPrototypeOf</span><span class="token punctuation">(</span>test2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8FD4\u56DE\u5B9E\u4F8B\u7684\u539F\u578B\u5BF9\u8C61 - Object.getPrototypeOf</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">Test</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Test</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;this is a test&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>test1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>test1<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5411\u5B9E\u4F8B\u7684\u79C1\u6709\u7279\u6027[[Prototype]]\u6DFB\u52A0\u5B57\u6BB5 - setPrototypeOf <blockquote><p>\u4F1A\u4E25\u91CD\u5F71\u54CD\u4EE3\u7801\u6027\u80FD \u53EF\u4F7F\u7528 object.create() \u6765\u6DFB\u52A0\u79C1\u6709\u5C5E\u6027</p></blockquote></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 \u6765\u81EA\u539F\u578B\u5C5E\u6027</span>
obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2 \u6765\u81EA\u5B9E\u4F8B\u5C5E\u6027</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u578B\u5C42\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u5C42\u7EA7" aria-hidden="true">#</a> \u539F\u578B\u5C42\u7EA7</h3><blockquote><p>\u5BF9\u8C61\u8BBF\u95EE\u5C5E\u6027\u65F6\uFF0C\u4F1A\u6309\u7167\u5C5E\u6027\u540D\u79F0\u5F00\u59CB\u641C\u7D22\u3002\u5148\u641C\u7D22\u5B9E\u4F8B\u672C\u8EAB\u3002\u5982\u679C\u53D1\u73B0\u5C5E\u6027\uFF0C\u5219\u8FD4\u56DE\u8BE5\u5C5E\u6027\u503C\u3002\u5982\u6CA1\u6709\u627E\u5230\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5219\u641C\u7D22\u4F1A\u6CBF\u7740\u6307\u9488\u8FDB\u5165\u539F\u578B\u5BF9\u8C61\uFF0C\u7136\u540E\u5728\u539F\u578B\u5BF9\u8C61\u4E0A\u627E\u5230\u5C5E\u6027\u540E\uFF0C\u518D\u8FD4\u56DE\u5BF9\u5E94\u7684\u503C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>job <span class="token operator">=</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Greg&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Greg&quot;\uFF0C\u6765\u81EA\u5B9E\u4F8B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Nicholas&quot;\uFF0C\u6765\u81EA\u539F\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u786E\u5B9A\u5C5E\u6027\u662F\u5B9E\u4F8B\u4E0A\u8FD8\u662F\u539F\u578B\u5BF9\u8C61\u4E0A - hasOwnProperty() // \u5C5E\u6027\u5728\u5B9E\u4F8B\u4E0A\u8FD4\u56DE true</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>job <span class="token operator">=</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
person1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Greg&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Greg&quot;\uFF0C\u6765\u81EA\u5B9E\u4F8B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Nicholas&quot;\uFF0C\u6765\u81EA\u539F\u578B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person2<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u901A\u8FC7\u5BF9\u8C61\u8BBF\u95EE\u6307\u5B9A\u5C5E\u6027\u65F6\u8FD4\u56DE true - in \u64CD\u4F5C\u7B26</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>job <span class="token operator">=</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span> <span class="token keyword">in</span> person1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

person1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Greg&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span> <span class="token keyword">in</span> person1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u578B\u94FE\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u94FE\u7EE7\u627F" aria-hidden="true">#</a> \u539F\u578B\u94FE\u7EE7\u627F</h3><ol><li>\u76F4\u63A5\u901A\u8FC7\u4E00\u4E2A\u5305\u542B\u6240\u6709\u5C5E\u6027\u548C\u65B9\u6CD5\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\u6765\u91CD\u5199\u539F\u578B</li></ol><ul><li>\u95EE\u9898: Person.prototype \u7684 constructor \u5C5E\u6027\u5C31\u4E0D\u6307\u5411 Person</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
  <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">,</span>
  <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u901A\u8FC7\u539F\u578B\u91CD\u65B0\u6784\u9020\u51FD\u6570\u4F1A\u521B\u5EFA\u4E00\u4E2A[[Enumerable]]\u4E3A true \u7684\u5C5E\u6027 <blockquote><p>\u539F\u751F constructor \u662F\u4E0D\u53EF\u679A\u4E3E\u7684</p></blockquote></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">constructor</span><span class="token operator">:</span> Person<span class="token punctuation">,</span> <span class="token comment">// constructor \u4F1A\u521B\u5EFA Enumerable \u5C5E\u6027</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
  <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">,</span>
  <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u517C\u5BB9 ECMAscript \u7684 JavaScript \u5F15\u64CE \u9700\u8981 \u901A\u8FC7 Object.defineProperty() \u8BBE\u7F6E constructor</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
  <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&quot;Software Engineer&quot;</span><span class="token punctuation">,</span>
  <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u6062\u590D constructor \u5C5E\u6027</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&quot;constructor&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> Person<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u539F\u578B\u7684\u52A8\u6001\u6027 - \u4EFB\u4F55\u65F6\u5019\u5BF9\u539F\u578B\u5BF9\u8C61\u6240\u505A\u7684\u4FEE\u6539\u4E5F\u4F1A\u5728\u5B9E\u4F8B\u4E0A\u53CD\u6620\u51FA\u6765</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> friend <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
friend<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hi&quot;\uFF0C\u6CA1\u95EE\u9898\uFF01</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6CE8\u610F\u70B9: <ol><li>\u5728\u8C03\u7528 friend.sayHi()\u65F6,\u9996\u5148\u4ECE\u5B9E\u4F8B\u4E2D\u641C\u7D22 sayHi \u5C5E\u6027,\u5982\u679C\u6CA1\u6709,\u4F1A\u4ECE\u539F\u578B\u4E0A\u67E5\u627E\u5E76\u8FD4\u56DE sayHi \u5C5E\u6027</li><li>\u5B9E\u4F8B\u548C\u539F\u578B\u901A\u8FC7\u6307\u9488,\u800C\u4E0D\u662F\u526F\u672C,\u6240\u4EE5\u4F1A\u67E5\u627E\u5230\u5C5E\u6027\u5E76\u8FD4\u56DE\u5C5E\u6027\u51FD\u6570</li><li>\u5B9E\u4F8B\u53EA\u6709\u6307\u5411\u539F\u578B\u7684\u6307\u9488,\u6CA1\u6709\u6307\u5411\u6784\u9020\u51FD\u6570\u7684\u6307\u9488</li><li>\u901A\u8FC7 \u539F\u751F\u5BF9\u8C61\u6216\u81EA\u5B9A\u4E49\u5BF9\u8C61 \u53D6\u5F97\u6240\u6709 \u9ED8\u8BA4\u65B9\u6CD5\u7684 \u5F15\u7528,\u4E5F\u53EF\u4EE5\u6DFB\u52A0\u65B0\u65B9\u6CD5</li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>sort<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;function&quot;</span>

<span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">startsWith</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&quot;Hello world!&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u539F\u578B\u7684\u5171\u4EAB\u7279\u6027</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">constructor</span><span class="token operator">:</span> Person<span class="token punctuation">,</span>
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Shelby&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Court&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person1<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;Van&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>friends<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Shelby,Court,Van&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person2<span class="token punctuation">.</span>friends<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Shelby,Court,Van&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>friends <span class="token operator">===</span> person2<span class="token punctuation">.</span>friends<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u539F\u578B\u94FE" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u94FE" aria-hidden="true">#</a> \u539F\u578B\u94FE</h2><blockquote><p>\u539F\u578B\u672C\u8EAB\u6709\u4E00\u4E2A\u5185\u90E8\u6307\u9488\u6307\u5411\u53E6\u4E00\u4E2A\u539F\u578B\uFF0C\u76F8\u5E94\u5730\u53E6\u4E00\u4E2A\u539F\u578B\u4E5F\u6709\u4E00\u4E2A\u6307\u9488\u6307\u5411\u53E6\u4E00\u4E2A\u6784\u9020\u51FD\u6570</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">SuperType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>property <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">SuperType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getSuperValue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>property<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>subProperty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7EE7\u627F SuperType</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getSubValue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subProperty<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span><span class="token function">getSuperValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B" aria-hidden="true">#</a> \u6D41\u7A0B</h3><ol><li>\u5728\u8BFB\u53D6\u5B9E\u4F8B\u7684\u5C5E\u6027\u65F6\uFF0C\u9996\u5148\u5728\u5B9E\u4F8B\u4E0A\u641C\u7D22\u8FD9\u4E2A\u5C5E\u6027\u3002</li><li>\u5982\u679C\u6CA1\u627E\u5230\uFF0C\u5219\u4F1A\u7EE7\u627F\u641C\u7D22\u5B9E\u4F8B\u7684\u539F\u578B\u3002</li><li>\u5728\u901A\u8FC7\u539F\u578B\u94FE\u5B9E\u73B0\u7EE7\u627F\u4E4B\u540E\uFF0C\u641C\u7D22\u5C31\u53EF\u4EE5\u7EE7\u627F\u5411\u4E0A\uFF0C\u641C\u7D22\u539F\u578B\u7684\u539F\u578B</li></ol><h3 id="\u9ED8\u8BA4\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u539F\u578B" aria-hidden="true">#</a> \u9ED8\u8BA4\u539F\u578B</h3><ol><li><p>\u6240\u6709\u5F15\u7528\u7C7B\u578B\u90FD\u7EE7\u627F\u81EA Object</p><blockquote><p>SubType \u7EE7\u627F SuperType\uFF0C\u800C SuperType \u7EE7\u627F Object\u3002 \u5728\u8C03\u7528 instance.toString()\u65F6\uFF0C\u5B9E\u9645\u4E0A\u8C03\u7528\u7684\u662F\u4FDD\u5B58\u5728 Object.prototype \u4E0A\u7684\u65B9\u6CD5</p></blockquote></li><li><p>\u539F\u578B\u4E0E\u7EE7\u627F\u5173\u7CFB</p><ul><li>instanceof \u64CD\u4F5C\u7B26 <blockquote><p>console.log(instance instanceof Object); // true console.log(instance instanceof SuperType); // true console.log(instance instanceof SubType); // true</p></blockquote></li><li>isPrototypeOf() <blockquote><p>console.log(Object.prototype.isPrototypeOf(instance)); // true console.log(SuperType.prototype.isPrototypeOf(instance)); // true console.log(SubType.prototype.isPrototypeOf(instance)); // true</p></blockquote></li></ul></li><li><p>\u5B50\u7C7B\u6709\u65F6\u5019\u9700\u8981\u8986\u76D6\u7236\u7C7B\u7684\u65B9\u6CD5\uFF0C\u6216\u8005\u589E\u52A0\u7236\u7C7B\u6CA1\u6709\u7684\u65B9\u6CD5\u3002</p><blockquote><p>\u4E3A\u6B64\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u5FC5\u987B\u5728\u539F\u578B\u8D4B\u503C\u4E4B\u540E\u518D\u6DFB\u52A0\u5230\u539F\u578B\u4E0A \u4EE5\u5BF9\u8C61\u5B57\u9762\u91CF\u65B9\u5F0F\u521B\u5EFA\u539F\u578B\u65B9\u6CD5\u4F1A\u7834\u574F\u4E4B\u524D\u7684\u539F\u578B\u94FE\uFF0C\u56E0\u4E3A\u8FD9\u76F8\u5F53\u4E8E\u91CD\u5199\u4E86\u539F\u578B\u94FE</p></blockquote></li><li><p>\u539F\u578B\u4E2D\u7684\u5F15\u7528\u503C\u53D1\u751F\u5171\u4EAB,\u6240\u4EE5\u5C5E\u6027\u901A\u5E38\u4F1A\u5B9A\u4E49\u5728\u6784\u9020\u51FD\u6570</p></li><li><p>\u5B50\u7C7B\u578B\u5728\u5B9E\u4F8B\u5316\u65F6\u4E0D\u80FD\u7ED9\u7236\u7C7B\u578B\u7684\u6784\u9020\u51FD\u6570\u7A7F\u53C2</p></li></ol><h3 id="\u76D7\u7528\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u76D7\u7528\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u76D7\u7528\u6784\u9020\u51FD\u6570</h3><blockquote><p>\u5728\u5B50\u7C7B\u4E2D\u8C03\u7528\u7236\u7C7B\u6784\u9020\u51FD\u6570 -- apply(),call() \u521B\u5EFA\u5BF9\u8C61\u7684\u4E0A\u4E0B\u6587</p></blockquote><ul><li><p>\u4E3A\u4E86\u89E3\u51B3\u539F\u578B\u5305\u542B\u5F15\u7528\u503C\u5BFC\u81F4\u7684\u7EE7\u627F\u95EE\u9898</p></li><li><p>\u95EE\u9898:</p><ol><li>\u5FC5\u987B\u5728\u6784\u9020\u51FD\u6570\u4E2D\u5B9A\u4E49\u65B9\u6CD5\uFF0C\u56E0\u6B64\u51FD\u6570\u4E0D\u80FD\u91CD\u7528</li><li>\u5B50\u7C7B\u4E5F\u4E0D\u80FD\u8BBF\u95EE\u7236\u7C7B\u539F\u578B\u4E0A\u5B9A\u4E49\u7684\u65B9\u6CD5\uFF0C\u56E0\u6B64\u6240\u6709\u7C7B\u578B\u53EA\u80FD\u4F7F\u7528\u6784\u9020\u51FD\u6570\u6A21\u5F0F</li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">SuperType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7EE7\u627F SuperType</span>
  <span class="token function">SuperType</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> instance1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
instance1<span class="token punctuation">.</span>colors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance1<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;red,blue,green,black&quot;</span>
<span class="token keyword">let</span> instance2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance2<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;red,blue,green&quot;</span>

<span class="token comment">// \u901A\u8FC7\u4F7F\u7528 call()\uFF08\u6216 apply()\uFF09\u65B9\u6CD5\uFF0CSuperType\u6784\u9020\u51FD\u6570\u5728\u4E3A SubType \u7684\u5B9E\u4F8B\u521B\u5EFA\u7684\u65B0\u5BF9\u8C61\u7684\u4E0A\u4E0B\u6587\u4E2D\u6267\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EC4\u5408\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u5408\u7EE7\u627F" aria-hidden="true">#</a> \u7EC4\u5408\u7EE7\u627F</h3><blockquote><p>\u7EFC\u5408\u4E86\u539F\u578B\u94FE\u548C\u76D7\u7528\u6784\u9020\u51FD\u6570,\u4F7F\u7528\u539F\u578B\u94FE\u7EE7\u627F\u539F\u578B\u4E0A\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u800C\u901A\u8FC7\u76D7\u7528\u6784\u9020\u51FD\u6570\u7EE7\u627F\u5B9E\u4F8B\u5C5E\u6027</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">SuperType</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">SuperType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">SubType</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7EE7\u627F\u5C5E\u6027</span>
  <span class="token function">SuperType</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7EE7\u627F\u65B9\u6CD5</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayAge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> instance1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubType</span><span class="token punctuation">(</span><span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
instance1<span class="token punctuation">.</span>colors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance1<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;red,blue,green,black&quot;</span>
instance1<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Nicholas&quot;;</span>
instance1<span class="token punctuation">.</span><span class="token function">sayAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 29</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u7EC4\u5408\u7EE7\u627F\u5F25\u8865\u4E86\u539F\u578B\u94FE\u548C\u76D7\u7528\u6784\u9020\u51FD\u6570\u7684\u4E0D\u8DB3\uFF0C\u662F JavaScript \u4E2D\u4F7F\u7528\u6700\u591A\u7684\u7EE7\u627F\u6A21\u5F0F\u3002</p></blockquote><ul><li><p>\u5BF9\u8C61\u5171\u4EAB\u4FE1\u606F</p><ul><li><p>\u539F\u578B\u5F0F\u7EE7\u627F - \u7C7B\u4F3C\u4E8E\u539F\u578B\u6A21\u5F0F -- ECMAscript5 Object.create()</p><blockquote><p>\u4E0D\u9700\u8981\u5355\u72EC\u521B\u5EFA\u6784\u9020\u51FD\u6570\uFF0C\u4F46\u9700\u8981\u539F\u578B\u5171\u4EAB\u3002</p></blockquote></li><li><p>\u5BC4\u751F\u5F0F\u7EE7\u627F - \u7C7B\u4F3C\u4E8E\u5BC4\u751F\u6784\u9020\u51FD\u6570\u548C\u5DE5\u5382\u6A21\u5F0F</p><blockquote><p>\u521B\u5EFA\u4E00\u4E2A\u5B9E\u73B0\u7EE7\u627F\u7684\u51FD\u6570\uFF0C\u4EE5\u67D0\u79CD\u65B9\u5F0F\u589E\u5F3A\u5BF9\u8C61\uFF0C\u7136\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61 \u539F\u578B\u5171\u4EAB \u4EFB\u4F55\u8FD4\u56DE\u65B0\u5BF9\u8C61\u7684\u51FD\u6570\u90FD\u53EF\u4EE5\u5728\u8FD9\u91CC\u4F7F\u7528\u3002 \u6CE8\u610F \u901A\u8FC7\u5BC4\u751F\u5F0F\u7EE7\u627F\u7ED9\u5BF9\u8C61\u6DFB\u52A0\u51FD\u6570\u4F1A\u5BFC\u81F4\u51FD\u6570\u96BE\u4EE5\u91CD\u7528\uFF0C\u4E0E\u6784\u9020\u51FD\u6570\u6A21\u5F0F\u7C7B\u4F3C\u3002</p></blockquote></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u539F\u578B\u5F0F\u7EE7\u627F</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;xiaoming&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person1 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;1&#39;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;1&#39;]</span>

<span class="token comment">// \u5BC4\u751F\u5F0F\u7EE7\u627F</span>
<span class="token keyword">function</span> <span class="token function">createAnother</span><span class="token punctuation">(</span><span class="token parameter">original</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> clone <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u901A\u8FC7\u8C03\u7528\u51FD\u6570\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61</span>
  clone<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4EE5\u67D0\u79CD\u65B9\u5F0F\u589E\u5F3A\u8FD9\u4E2A\u5BF9\u8C61</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> clone<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Shelby&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Court&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Van&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> anotherPerson <span class="token operator">=</span> <span class="token function">createAnother</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
anotherPerson<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hi&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7EC4\u5408\u7EE7\u627F\u6548\u7387\u95EE\u9898 --- \u7236\u7C7B\u6784\u9020\u51FD\u6570\u59CB\u7EC8\u8C03\u7528\u4E24\u6B21: <ol><li>\u521B\u5EFA\u5B50\u7C7B\u539F\u578B</li><li>\u5B50\u7C7B\u6784\u9020\u51FD\u6570</li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">SuperType</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">SuperType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">SubType</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">SuperType</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E8C\u6B21\u8C03\u7528 SuperType()</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E00\u6B21\u8C03\u7528 SuperType()</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> SubType<span class="token punctuation">;</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayAge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F" aria-hidden="true">#</a> \u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F</h2><blockquote><p>\u901A\u8FC7\u76D7\u7528\u6784\u9020\u51FD\u6570\u7EE7\u627F\u5C5E\u6027\uFF0C\u4F46\u4F7F\u7528\u6DF7\u5408\u5F0F\u539F\u578B\u94FE\u7EE7\u627F\u65B9\u6CD5 \u4F7F\u7528\u5BC4\u751F\u5F0F\u7EE7\u627F\u6765\u7EE7\u627F\u7236\u7C7B\u539F\u578B\uFF0C\u7136\u540E\u5C06\u8FD4\u56DE\u7684\u65B0\u5BF9\u8C61\u8D4B\u503C\u7ED9\u5B50\u7C7B\u539F\u578B \u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F\u53EF\u4EE5\u7B97\u662F\u5F15\u7528\u7C7B\u578B\u7EE7\u627F\u7684\u6700\u4F73\u6A21\u5F0F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">inheritPrototype</span><span class="token punctuation">(</span><span class="token parameter">subType<span class="token punctuation">,</span> superType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> prototype <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>superType<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u5BF9\u8C61</span>
  prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> subType<span class="token punctuation">;</span> <span class="token comment">// \u589E\u5F3A\u5BF9\u8C61</span>
  subType<span class="token punctuation">.</span>prototype <span class="token operator">=</span> prototype<span class="token punctuation">;</span> <span class="token comment">// \u8D4B\u503C\u5BF9\u8C61</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">SuperType</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">SuperType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">SubType</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">SuperType</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">inheritPrototype</span><span class="token punctuation">(</span>SubType<span class="token punctuation">,</span> SuperType<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SubType</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayAge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65),e=[o];function c(l,u){return s(),a("div",null,e)}var k=n(t,[["render",c],["__file","index.html.vue"]]);export{k as default};
