import{_ as n,o as s,c as a,e as t}from"./app.aec07951.js";const p={},e=t(`<h1 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h1><h2 id="\u5F02\u6B65\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7F16\u7A0B" aria-hidden="true">#</a> \u5F02\u6B65\u7F16\u7A0B</h2><h3 id="\u96BE\u70B9" tabindex="-1"><a class="header-anchor" href="#\u96BE\u70B9" aria-hidden="true">#</a> \u96BE\u70B9</h3><ol><li><p>\u5F02\u5E38\u5904\u7406</p><ul><li>try/catch/final \u5728\u5F02\u6B65\u7F16\u7A0B\u4E2D\u4E0D\u4E00\u5B9A\u9002\u7528</li><li>\u89E3\u51B3\u65B9\u6848</li></ul><blockquote><p>\u5C06\u5F02\u5E38\u4F5C\u4E3A\u56DE\u8C03\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u5B9E\u53C2\u4F20\u56DE\uFF0C\u5982\u679C\u4E3A\u7A7A\u503C\uFF0C\u5219\u8868\u660E\u5F02\u6B65\u8C03\u7528\u6CA1\u6709\u5F02\u5E38\u629B\u51FA</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> results</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// TODO</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5728\u81EA\u884C\u7F16\u5199\u7684\u5F02\u6B65\u65B9\u6CD5\u4E0A\u7684\u4E00\u4E9B\u539F\u5219</p><ol><li>\u5FC5\u987B\u6267\u884C\u8C03\u7528\u8005\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570</li><li>\u6B63\u786E\u4F20\u9012\u56DE\u5F02\u5E38\u4F9B\u8C03\u7528\u8005\u5224\u65AD</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">async</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> results <span class="token operator">=</span> something<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> results<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u51FD\u6570\u5D4C\u5957\u8FC7\u6DF1</p><blockquote><p>\u5728\u7F51\u9875\u6E32\u67D3\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u901A\u5E38\u9700\u8981\u6570\u636E\u3001\u6A21\u677F\u3001\u8D44\u6E90\u6587\u4EF6\uFF0C\u8FD9\u4E09\u8005\u4E92\u76F8\u4E4B\u95F4\u5E76\u4E0D\u4F9D\u8D56\uFF0C\u4F46\u6700\u7EC8\u6E32\u67D3\u7ED3\u679C\u4E2D\u4E09\u8005\u7F3A\u4E00\u4E0D\u53EF\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>template_path<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> template</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    l10n<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> resources</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// TODO</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u963B\u585E\u4EE3\u7801</p><blockquote><p>\u6CA1\u6709 sleep()\u8FD9\u6837\u7684\u7EBF\u7A0B\u6C89\u7761\u529F\u80FD,\u53EA\u6709 setInterval()\u548C setTimeout()\u8FD9\u4E24\u4E2A\u51FD\u6570</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u6709\u591A\u534A\u7684\u5F00\u53D1\u8005\u4F1A\u5199\u51FA\u4E0B\u8FF0\u8FD9\u6837\u7684\u4EE3\u7801\u6765\u5B9E\u73B0sleep(1000)\u7684\u6548\u679C</span>
<span class="token comment">// TODO</span>
<span class="token keyword">var</span> start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// TODO</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u9700\u8981\u963B\u585E\u7684\u4EE3\u7801</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4F46\u662F\u4E8B\u5B9E\u662F\u7CDF\u7CD5\u7684\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u4F1A\u6301\u7EED\u5360\u7528 CPU \u8FDB\u884C\u5224\u65AD\uFF0C\u4E0E\u771F\u6B63\u7684\u7EBF\u7A0B\u6C89\u7761\u76F8\u53BB\u751A\u8FDC\uFF0C\u5B8C\u5168\u7834\u574F\u4E86\u4E8B\u4EF6\u5FAA\u73AF\u7684\u8C03\u5EA6\u3002 \u7531\u4E8E Node \u5355\u7EBF\u7A0B\u7684\u539F\u56E0\uFF0CCPU \u8D44\u6E90\u5168\u90FD\u4F1A\u7528\u4E8E\u4E3A\u8FD9\u6BB5\u4EE3\u7801\u670D\u52A1\uFF0C\u5BFC\u81F4\u5176\u4F59\u4EFB\u4F55\u8BF7\u6C42\u90FD\u4F1A\u5F97\u4E0D\u5230\u54CD\u5E94 \u4F7F\u7528 setTimeout() \u6548\u679C\u4F1A\u597D\u4E00\u4E9B</p></blockquote></li><li><p>\u591A\u7EBF\u7A0B\u7F16\u7A0B</p></li></ol><ul><li><p>web workers</p><blockquote><p>\u901A\u8FC7\u5C06 JavaScript \u6267\u884C\u4E0E UI \u6E32\u67D3\u5206\u79BB\uFF0C\u53EF\u4EE5\u5F88\u597D\u5730\u5229\u7528\u591A\u6838 CPU \u4E3A\u5927\u91CF\u8BA1\u7B97 \u540C\u65F6\u524D\u7AEF Web Workers \u4E5F\u662F\u4E00\u4E2A\u5229\u7528\u6D88\u606F\u673A\u5236\u5408\u7406\u4F7F\u7528\u591A\u6838 CPU \u7684\u7406\u60F3\u6A21\u578B</p></blockquote><ul><li><p>Node \u7684\u89E3\u51B3\u65B9\u6848:</p><ol><li>child_process \u662F\u5176\u57FA\u7840 API</li><li>cluster \u6A21\u5757\u662F\u66F4\u6DF1\u5C42\u6B21\u7684\u5E94\u7528</li></ol><blockquote><p>\u501F\u52A9 Web Workers \u7684\u6A21\u5F0F\uFF0C\u5F00\u53D1\u4EBA\u5458\u8981\u66F4\u591A\u5730\u53BB\u9762\u4E34\u8DE8\u7EBF\u7A0B\u7684\u7F16\u7A0B</p></blockquote></li></ul></li></ul><ol start="5"><li>\u5F02\u6B65\u8F6C\u540C\u6B65 <blockquote><p>Node \u63D0\u4F9B\u4E86\u7EDD\u5927\u90E8\u5206\u7684\u5F02\u6B65 API \u548C\u5C11\u91CF\u7684\u540C\u6B65 API\uFF0C\u5076\u5C14\u51FA\u73B0\u7684\u540C\u6B65\u9700\u6C42\u5C06\u4F1A\u56E0\u4E3A\u6CA1\u6709\u540C\u6B65 API \u8BA9\u5F00\u53D1\u8005\u7A81\u7136\u65E0\u6240\u9002\u4ECE Node \u4E2D\u8BD5\u56FE\u540C\u6B65\u5F0F\u7F16\u7A0B\uFF0C\u4F46\u5E76\u4E0D\u80FD\u5F97\u5230\u539F\u751F\u652F\u6301\uFF0C\u9700\u8981\u501F\u52A9\u5E93\u6216\u8005\u7F16\u8BD1\u7B49\u624B\u6BB5\u6765\u5B9E\u73B0 \u5F02\u6B65\u8C03\u7528\uFF0C\u901A\u8FC7\u826F\u597D\u7684\u6D41\u7A0B\u63A7\u5236\uFF0C\u8FD8\u662F\u80FD\u591F\u5C06\u903B\u8F91\u68B3\u7406\u6210\u987A\u5E8F\u5F0F\u7684\u5F62\u5F0F</p></blockquote></li></ol><ul><li><p>\u5F02\u6B65\u7F16\u7A0B\u89E3\u51B3\u65B9\u6848</p><ol><li>\u4E8B\u4EF6\u53D1\u5E03/\u8BA2\u9605\u6A21\u5F0F</li><li>Promise/Deferred \u6A21\u5F0F</li><li>\u6D41\u7A0B\u63A7\u5236\u5E93</li></ol><ul><li><p>\u4E8B\u4EF6\u53D1\u5E03/\u8BA2\u9605\u6A21\u5F0F</p><ul><li>\u9AD8\u9636\u51FD\u6570\u5E94\u7528</li><li>\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u4E8B\u4EF6\u4E0E\u591A\u4E2A\u56DE\u8C03\u51FD\u6570\u7684\u5173\u8054\uFF0C\u8FD9\u4E9B\u56DE\u8C03\u51FD\u6570\u53C8\u79F0\u4E3A\u4E8B\u4EF6\u4FA6\u542C\u5668\u901A\u8FC7 emit()\u53D1\u5E03\u4E8B\u4EF6\u540E\uFF0C\u6D88\u606F\u4F1A\u7ACB\u5373\u4F20\u9012\u7ED9\u5F53\u524D\u4E8B\u4EF6\u7684\u6240\u6709\u4FA6\u542C\u5668\u6267\u884C\u3002\u4FA6\u542C\u5668\u53EF\u4EE5\u5F88\u7075\u6D3B\u5730\u6DFB\u52A0\u548C\u5220\u9664\uFF0C\u4F7F\u5F97\u4E8B\u4EF6\u548C\u5177\u4F53\u5904\u7406\u903B\u8F91\u4E4B\u95F4\u53EF\u4EE5\u5F88\u8F7B\u677E\u5730\u5173\u8054\u548C\u89E3\u8026</li><li>emit()\u8C03\u7528\u591A\u534A\u662F\u4F34\u968F\u4E8B\u4EF6\u5FAA\u73AF\u800C\u5F02\u6B65\u89E6\u53D1\u7684</li><li>\u4E00\u79CD\u94A9\u5B50\uFF08hook\uFF09\u673A\u5236\uFF0C\u5229\u7528\u94A9\u5B50\u5BFC\u51FA\u5185\u90E8\u6570\u636E\u6216\u72B6\u6001\u7ED9\u5916\u90E8\u7684\u8C03\u7528\u8005</li><li>\u4E0D\u7528\u5173\u6CE8\u7EC4\u4EF6\u662F\u5982\u4F55\u542F\u52A8\u548C\u6267\u884C\u7684\uFF0C\u53EA\u9700\u5173\u6CE8\u5728\u9700\u8981\u7684\u4E8B\u4EF6\u70B9\u4E0A\u5373\u53EF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BA2\u9605</span>
emitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;event1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u53D1\u5E03s</span>
emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;event1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;I am message!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u6CE8\u610F\u70B9</p><ul><li><p>\u5BF9\u4E00\u4E2A\u4E8B\u4EF6\u6DFB\u52A0\u4E86\u8D85\u8FC7 10 \u4E2A\u4FA6\u542C\u5668\uFF0C\u5C06\u4F1A\u5F97\u5230\u4E00\u6761\u8B66\u544A</p><blockquote><p>\u907F\u514D\u5185\u5B58\u6CC4\u6F0F</p></blockquote></li><li><p>\u4E3A\u4E86\u5904\u7406\u5F02\u5E38\uFF0CEventEmitter \u5BF9\u8C61\u5BF9 error \u4E8B\u4EF6\u8FDB\u884C\u4E86\u7279\u6B8A\u5BF9\u5F85\u3002</p><ol><li><p>\u7EE7\u627F events \u6A21\u5757</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> events <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;events&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  events<span class="token punctuation">.</span><span class="token function">EventEmitter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
util<span class="token punctuation">.</span><span class="token function">inherits</span><span class="token punctuation">(</span>Stream<span class="token punctuation">,</span> events<span class="token punctuation">.</span>EventEmitter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u901A\u8FC7\u7EE7\u627FEventEmitter\u7C7B\uFF0C\u5229\u7528\u4E8B\u4EF6\u673A\u5236\u89E3\u51B3\u4E1A\u52A1\u95EE\u9898</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5229\u7528\u4E8B\u4EF6\u961F\u5217\u89E3\u51B3\u96EA\u5D29\u95EE\u9898</p><blockquote><p>\u4F7F\u7528 once()\u65B9\u6CD5\uFF0C\u901A\u8FC7\u5B83\u6DFB\u52A0\u7684\u4FA6\u542C\u5668\u53EA\u80FD\u6267\u884C\u4E00\u6B21\uFF0C\u5728\u6267\u884C\u4E4B\u540E\u5C31\u4F1A\u5C06\u5B83\u4E0E\u4E8B\u4EF6\u7684\u5173\u8054\u79FB\u9664\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">events<span class="token punctuation">.</span>EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> status <span class="token operator">=</span> <span class="token string">&quot;ready&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">select</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  proxy<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&quot;selected&quot;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">&quot;ready&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    status <span class="token operator">=</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;SQL&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">results</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      proxy<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;selected&quot;</span><span class="token punctuation">,</span> results<span class="token punctuation">)</span><span class="token punctuation">;</span>
      status <span class="token operator">=</span> <span class="token string">&quot;ready&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5229\u7528\u4E86once(),\u5C06\u6240\u6709\u8BF7\u6C42\u7684\u56DE\u8C03\u90FD\u538B\u5165\u4E8B\u4EF6\u961F\u5217\u4E2D\uFF0C</span>
<span class="token comment">// \u5229\u7528\u5176\u6267\u884C\u4E00\u6B21\u5C31\u4F1A\u5C06\u76D1\u89C6\u5668\u79FB\u9664\u7684\u7279\u70B9\uFF0C\u4FDD\u8BC1\u6BCF\u4E00\u4E2A\u56DE\u8C03\u53EA\u4F1A\u88AB\u6267\u884C\u4E00\u6B21\u3002</span>

<span class="token comment">// \u6B64\u5904\u53EF\u80FD\u56E0\u4E3A\u5B58\u5728\u4FA6\u542C\u5668\u8FC7\u591A\u5F15\u53D1\u7684\u8B66\u544A\uFF0C\u9700\u8981\u8C03\u7528setMaxListeners(0)\u79FB\u9664\u6389\u8B66\u544A\uFF0C\u6216\u8005\u8BBE\u66F4\u5927\u7684\u8B66\u544A\u9608\u503C\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u591A\u5F02\u6B65\u4E4B\u95F4\u7684\u534F\u4F5C\u65B9\u6848</p><blockquote><p>\u4E00\u822C\u800C\u8A00\uFF0C\u4E8B\u4EF6\u4E0E\u4FA6\u542C\u5668\u7684\u5173\u7CFB\u662F\u4E00\u5BF9\u591A\uFF0C\u4F46\u5728\u5F02\u6B65\u7F16\u7A0B\u4E2D\uFF0C\u4E5F\u4F1A\u51FA\u73B0\u4E8B\u4EF6\u4E0E\u4FA6\u542C\u5668\u7684\u5173\u7CFB\u662F\u591A\u5BF9\u4E00\u7684\u60C5\u51B5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">done</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  results<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
  count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6E32\u67D3\u9875\u9762</span>
    <span class="token function">render</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>template_path<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> template</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&quot;template&quot;</span><span class="token punctuation">,</span> template<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
l10n<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> resources</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&quot;resources&quot;</span><span class="token punctuation">,</span> resources<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u591A\u4E2A\u5F02\u6B65\u573A\u666F\u4E2D\u56DE\u8C03\u51FD\u6570\u7684\u6267\u884C\u5E76\u4E0D\u80FD\u4FDD\u8BC1\u987A\u5E8F\uFF0C\u4E14\u56DE\u8C03\u51FD\u6570\u4E4B\u95F4\u4E92\u76F8\u6CA1\u6709\u4EFB\u4F55\u4EA4\u96C6\uFF0C\u6240\u4EE5\u9700\u8981\u501F\u52A9\u4E00\u4E2A\u7B2C\u4E09\u65B9\u51FD\u6570\u548C\u7B2C\u4E09\u65B9\u53D8\u91CF\u6765\u5904\u7406\u5F02\u6B65\u534F\u4F5C\u7684\u7ED3\u679C\u3002</span>
<span class="token keyword">var</span> <span class="token function-variable function">after</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">times<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    results<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> times<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> done <span class="token operator">=</span> <span class="token function">after</span><span class="token punctuation">(</span>times<span class="token punctuation">,</span> render<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9E\u9645\u5E94\u7528</span>
<span class="token keyword">var</span> emitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">events<span class="token punctuation">.</span>Emitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> done <span class="token operator">=</span> <span class="token function">after</span><span class="token punctuation">(</span>times<span class="token punctuation">,</span> render<span class="token punctuation">)</span><span class="token punctuation">;</span>
emitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span><span class="token punctuation">;</span>
emitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">;</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>template_path<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> template</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;template&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
l10n<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> resources</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;resources&quot;</span><span class="token punctuation">,</span> resources<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>EventProxy</p><blockquote><p>\u5BF9\u4E8B\u4EF6\u8BA2\u9605/\u53D1\u5E03\u6A21\u5F0F\u7684\u6269\u5145\uFF0C\u53EF\u4EE5\u81EA\u7531\u8BA2\u9605\u7EC4\u5408\u4E8B\u4EF6\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">&quot;template&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;resources&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>template<span class="token punctuation">,</span> data<span class="token punctuation">,</span> resource
 <span class="token comment">// TODO</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>template_path<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> template</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 proxy<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;template&quot;</span><span class="token punctuation">,</span> template<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 proxy<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
l10n<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> resources</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 proxy<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;resources&quot;</span><span class="token punctuation">,</span> resources<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>all() \u8BA2\u9605\u591A\u4E2A\u4E8B\u4EF6\u5F53,\u6BCF\u4E2A\u4E8B\u4EF6\u90FD\u88AB\u89E6\u53D1\u4E4B\u540E\uFF0C\u4FA6\u542C\u5668\u624D\u4F1A\u6267\u884C</p></li><li><p>tail()\u65B9\u6CD5\u7684\u4FA6\u542C\u5668\u5219\u5728\u6EE1\u8DB3\u6761\u4EF6\u65F6\u6267\u884C\u4E00\u6B21\u4E4B\u540E\uFF0C\u5982\u679C\u7EC4\u5408\u4E8B\u4EF6\u4E2D\u7684\u67D0\u4E2A\u4E8B\u4EF6\u88AB\u518D\u6B21\u89E6\u53D1\uFF0C\u4FA6\u542C\u5668\u4F1A\u7528\u6700\u65B0\u7684\u6570\u636E\u7EE7\u7EED\u6267\u884C</p></li><li><p>after()\u65B9\u6CD5\u6765\u5B9E\u73B0\u4E8B\u4EF6\u5728\u6267\u884C\u591A\u5C11\u6B21\u540E\u6267\u884C\u4FA6\u542C\u5668\u7684\u5355\u4E00\u4E8B\u4EF6\u7EC4\u5408\u8BA2\u9605\u65B9\u5F0F</p></li><li><p>EventProxy \u539F\u7406</p><blockquote><p>\u6765\u81EA\u4E8E Backbone \u7684\u4E8B\u4EF6\u6A21\u5757 EventProxy \u5219\u662F\u5C06 all \u5F53\u505A\u4E00\u4E2A\u4E8B\u4EF6\u6D41\u7684\u62E6\u622A\u5C42\uFF0C\u5728\u5176\u4E2D\u6CE8\u5165\u4E00\u4E9B\u4E1A\u52A1\u6765\u5904\u7406\u5355\u4E00\u4E8B\u4EF6\u65E0\u6CD5\u89E3\u51B3\u7684\u5F02\u6B65\u5904\u7406\u95EE\u9898\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Trigger an event, firing all bound callbacks. Callbacks are passed the</span>
<span class="token comment">// same arguments as \`trigger\` is, apart from the event name.</span>
<span class="token comment">// Listening for \`&quot;all&quot;\` passes the true event name as the first argument</span>
<span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eventName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> list<span class="token punctuation">,</span> calls<span class="token punctuation">,</span> ev<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> args<span class="token punctuation">;</span>
  <span class="token keyword">var</span> both <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>calls <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_callbacks<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>both<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ev <span class="token operator">=</span> both <span class="token operator">?</span> eventName <span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>list <span class="token operator">=</span> calls<span class="token punctuation">[</span>ev<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>callback <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          i<span class="token operator">--</span><span class="token punctuation">;</span>
          l<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          args <span class="token operator">=</span> both
            <span class="token operator">?</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token operator">:</span> arguments<span class="token punctuation">;</span>
          callback<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>callback<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5F02\u5E38\u5904\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>exports<span class="token punctuation">.</span><span class="token function-variable function">getContent</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> ep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ep<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">&quot;tpl&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">tpl<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6210\u529F\u56DE\u8C03</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">template</span><span class="token operator">:</span> tpl<span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7ED1\u5B9A\u9519\u8BEF\u5904\u7406\u51FD\u6570</span>
    ep<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;template.tpl&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> ep<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&quot;tpl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;some sql&quot;</span><span class="token punctuation">,</span> ep<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// fail() \u5B9E\u73B0</span>
ep<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>

ep<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">ep</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5378\u8F7D\u6389\u6240\u6709\u5904\u7406\u51FD\u6570</span>
    ep<span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F02\u5E38\u56DE\u8C03</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// done()</span>
ep<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&#39;tpl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E00\u65E6\u53D1\u751F\u5F02\u5E38\uFF0C\u4E00\u5F8B\u4EA4\u7ED9error\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u5904\u7406</span>
    <span class="token keyword">return</span> ep<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ep<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;tpl&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

ep<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO</span>
    <span class="token comment">// \u8FD9\u91CC\u65E0\u987B\u8003\u8651\u5F02\u5E38</span>
    ep<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;tpl&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E00\u65E6\u53D1\u751F\u5F02\u5E38\uFF0C\u4E00\u5F8B\u4EA4\u7ED9error\u4E8B\u4EF6\u7684\u5904\u7406\u51FD\u6570\u5904\u7406</span>
        <span class="token keyword">return</span> ep<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO</span>
    <span class="token comment">// \u8FD9\u91CC\u65E0\u987B\u8003\u8651\u5F02\u5E38</span>
    ep<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;tpl&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

ep<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&#39;tpl&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// content.replace(&#39;s&#39;, &#39;S&#39;);</span>
    <span class="token comment">// TODO</span>
    <span class="token comment">// \u65E0\u987B\u5173\u6CE8\u5F02\u5E38</span>
    <span class="token keyword">return</span> content<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol></li></ul></li></ul></li><li><p>Promise/Deferred \u6A21\u5F0F</p><pre><code>&gt; \u4F7F\u7528\u4E8B\u4EF6\u7684\u65B9\u5F0F\u65F6\uFF0C\u6267\u884C\u6D41\u7A0B\u9700\u8981\u88AB\u9884\u5148\u8BBE\u5B9A\u3002
&gt; \u5373\u4FBF\u662F\u5206\u652F\uFF0C\u4E5F\u9700\u8981\u9884\u5148\u8BBE\u5B9A\uFF0C\u8FD9\u662F\u7531\u53D1\u5E03/\u8BA2\u9605\u6A21\u5F0F\u7684\u8FD0\u884C\u673A\u5236\u6240\u51B3\u5B9A\u7684\u3002

- Promise

    \`\`\`javascript
    var Promise = function () {
        EventEmitter.call(this);
    };
    util.inherits(Promise, EventEmitter);
    Promise.prototype.then = function (
        fulfilledHandler,
        errorHandler,
        progressHandler
    ) {
        if (typeof fulfilledHandler === &quot;function&quot;) {
        // \u5229\u7528once()\u65B9\u6CD5\uFF0C\u4FDD\u8BC1\u6210\u529F\u56DE\u8C03\u53EA\u6267\u884C\u4E00\u6B21
        this.once(&quot;success&quot;, fulfilledHandler);
        }
        if (typeof errorHandler === &quot;function&quot;) {
        // \u5229\u7528once()\u65B9\u6CD5\uFF0C\u4FDD\u8BC1\u5F02\u5E38\u56DE\u8C03\u53EA\u6267\u884C\u4E00\u6B21
        this.once(&quot;error&quot;, errorHandler);
        }
        if (typeof progressHandler === &quot;function&quot;) {
        this.on(&quot;progress&quot;, progressHandler);
        }
        return this;
    };
    \`\`\`

    - \u591A\u5F02\u6B65\u534F\u540C
        \`\`\`javascript
            Deferred.prototype.all = function (promises) {
                var count = promises.length;
                var that = this;
                var results = [];
                promises.forEach(function (promise, i) {
                    promise.then(function (data) {
                        count--;
                        results[i] = data;
                        if (count === 0) {
                            that.resolve(results);
                        }
                    }, function (err) {
                        that.reject(err);
                    });
                });
                return this.promise;
            };

            var promise1 = readFile(&quot;foo.txt&quot;, &quot;utf-8&quot;);
            var promise2 = readFile(&quot;bar.txt&quot;, &quot;utf-8&quot;);
            var deferred = new Deferred();
            deferred.all([promise1, promise2]).then(function (results) {
            // TODO
            }, function (err) {
            // TODO
            });
        \`\`\`

- Deferred
    \`\`\`\`javascript
    var promisify = function (res) {
        var deferred = new Deferred();
        var result = &quot;&quot;;
        res.on(&quot;data&quot;, function (chunk) {
        result += chunk;
        deferred.progress(chunk);
        });
        res.on(&quot;end&quot;, function () {
        deferred.resolve(result);
        });
        res.on(&quot;error&quot;, function (err) {
        deferred.reject(err);
        });
        return deferred.promise;
    };

    promisify(res).then(function () {
        // Done
        }, function (err) {
        // Error
        }, function (chunk) {
        // progress
        console.log(&#39;BODY: &#39; + chunk);
        });
    \`\`\`\`

- promise \u548C Deferred \u5DEE\u5F02
  1. Deferred \u4E3B\u8981\u662F\u7528\u4E8E\u5185\u90E8\uFF0C\u7528\u4E8E\u7EF4\u62A4\u5F02\u6B65\u6A21\u578B\u7684\u72B6\u6001\uFF1B
  2. Promise \u5219\u4F5C\u7528\u4E8E\u5916\u90E8\uFF0C\u901A\u8FC7 then()\u65B9\u6CD5\u66B4\u9732\u7ED9\u5916\u90E8\u4EE5\u6DFB\u52A0\u81EA\u5B9A\u4E49\u903B\u8F91
</code></pre></li><li><p>\u6D41\u7A0B\u63A7\u5236\u5E93</p><blockquote><p>\u975E\u6A21\u5757\u5316\u5E94\u7528</p></blockquote><ol><li><p>\u5C3E\u89E6\u53D1 \u4E0E Next</p><blockquote><p>\u5E94\u7528\u573A\u666F:Connect \u7684\u4E2D\u95F4\u4EF6</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Middleware</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">staticCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&quot;/public&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">bodyParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u4E2D\u95F4\u4EF6\u5229\u7528\u4E86\u5C3E\u89E6\u53D1\u7684\u673A\u5236\uFF0C\u6700\u7B80\u5355\u7684\u4E2D\u95F4\u4EF6\u5982\u4E0B</span>
<span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u4E2D\u95F4\u4EF6</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u4F20\u9012\u8BF7\u6C42\u5BF9\u8C61\u3001\u54CD\u5E94\u5BF9\u8C61\u548C\u5C3E\u89E6\u53D1\u51FD\u6570(next)\uFF0C\u901A\u8FC7\u961F\u5217\u5F62\u6210\u4E00\u4E2A\u5904\u7406\u6D41</p><blockquote><p>\u4E2D\u95F4\u4EF6: request,response,next -&gt; \u4E2D\u95F4\u4EF6: request,response,next -&gt; \u4E2D\u95F4\u4EF6: request,response,next</p></blockquote></li><li><p>Connect \u7684\u6838\u5FC3\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  utils<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
  utils<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span>route <span class="token operator">=</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span>stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> app<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6838\u5FC3\u4EE3\u7801\u662Fapp.stack = [];</span>
<span class="token comment">// stack\u5C5E\u6027\u662F\u8FD9\u4E2A\u670D\u52A1\u5668\u5185\u90E8\u7EF4\u62A4\u7684\u4E2D\u95F4\u4EF6\u961F\u5217\u3002</span>
<span class="token comment">// \u901A\u8FC7\u8C03\u7528use()\u65B9\u6CD5\u6211\u4EEC\u53EF\u4EE5\u5C06\u4E2D\u95F4\u4EF6\u653E\u8FDB\u961F\u5217\u4E2D\u3002</span>

<span class="token comment">// use() \u6838\u5FC3\u4EE3\u7801</span>
app<span class="token punctuation">.</span><span class="token function-variable function">use</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">route<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// some code</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">route</span><span class="token operator">:</span> route<span class="token punctuation">,</span> <span class="token literal-property property">handle</span><span class="token operator">:</span> fn <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6700\u540E\u56DE\u5230 app.handle()\u65B9\u6CD5,\u6BCF\u4E00\u4E2A\u76D1\u542C\u5230\u7684\u7F51\u7EDC\u8BF7\u6C42\u90FD\u5C06\u4ECE\u8FD9\u91CC\u5F00\u59CB\u5904\u7406</span>
app<span class="token punctuation">.</span><span class="token function-variable function">handle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> out</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// some code</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// next()</span>
<span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// some code</span>
  <span class="token comment">// next callback</span>
  layer <span class="token operator">=</span> stack<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  layer<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>async</p></li><li><p>step</p></li><li><p>wind</p></li><li><p>streamline</p></li></ol></li></ul></li><li><p>\u5F02\u6B65\u5E76\u53D1\u63A7\u5236</p><blockquote><p>\u5728 Node \u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5341\u5206\u65B9\u4FBF\u5730\u5229\u7528\u5F02\u6B65\u53D1\u8D77\u5E76\u884C\u8C03\u7528\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5982\u679C\u5E76\u53D1\u91CF\u8FC7\u5927\uFF0C\u6211\u4EEC\u7684\u4E0B\u5C42\u670D\u52A1\u5668\u5C06\u4F1A\u5403\u4E0D\u6D88</p></blockquote><ul><li><p>\u540C\u6B65 I/O :</p><blockquote><p>\u540C\u6B65 I/O \u56E0\u4E3A\u6BCF\u4E2A I/O \u90FD\u662F\u5F7C\u6B64\u963B\u585E\u7684\uFF0C\u5728\u5FAA\u73AF\u4F53\u4E2D\uFF0C\u603B\u662F\u4E00\u4E2A\u63A5\u7740\u4E00\u4E2A\u8C03\u7528\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u8017\u7528\u6587\u4EF6\u63CF\u8FF0\u7B26\u592A\u591A\u7684\u60C5\u51B5\uFF0C\u540C\u65F6\u6027\u80FD\u4E5F\u662F\u4F4E\u4E0B\u7684</p></blockquote></li><li><p>\u5F02\u6B65 I/O:</p><blockquote><p>\u867D\u7136\u5E76\u53D1\u5BB9\u6613\u5B9E\u73B0\uFF0C\u4F46\u662F\u7531\u4E8E\u592A\u5BB9\u6613\u5B9E\u73B0\uFF0C\u4F9D\u7136\u9700\u8981\u8FDB\u884C\u8FC7\u8F7D\u5904\u7406</p></blockquote></li><li><p>\u89E3\u51B3\u65B9\u6848:bagpipe</p><ul><li><p>\u89E3\u51B3\u601D\u8DEF:</p><ol><li>\u901A\u8FC7\u4E00\u4E2A\u961F\u5217\u6765\u63A7\u5236\u5E76\u53D1\u91CF</li><li>\u5982\u679C\u5F53\u524D\u6D3B\u8DC3\uFF08\u6307\u8C03\u7528\u53D1\u8D77\u4F46\u672A\u6267\u884C\u56DE\u8C03\uFF09\u7684\u5F02\u6B65\u8C03\u7528\u91CF\u5C0F\u4E8E\u9650\u5B9A\u503C\uFF0C\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u6267\u884C</li><li>\u5982\u679C\u6D3B\u8DC3\u8C03\u7528\u8FBE\u5230\u9650\u5B9A\u503C\uFF0C\u8C03\u7528\u6682\u65F6\u5B58\u653E\u5728\u961F\u5217\u4E2D</li><li>\u6BCF\u4E2A\u5F02\u6B65\u8C03\u7528\u7ED3\u675F\u65F6\uFF0C\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u65B0\u7684\u5F02\u6B65\u8C03\u7528\u6267\u884C</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Bagpipe <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bagpipe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BBE\u5B9A\u6700\u5927\u5E76\u53D1\u6570\u4E3A10</span>
<span class="token keyword">var</span> bagpipe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bagpipe</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  bagpipe<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>async<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F02\u6B65\u56DE\u8C03\u6267\u884C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
bagpipe<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;full&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
    <span class="token string">&quot;\u5E95\u5C42\u7CFB\u7EDF\u5904\u7406\u4E0D\u80FD\u53CA\u65F6\u5B8C\u6210\uFF0C\u961F\u5217\u62E5\u5835\uFF0C\u76EE\u524D\u961F\u5217\u957F\u5EA6\u4E3A:&quot;</span> <span class="token operator">+</span> length
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// push</span>
<span class="token class-name">Bagpipe</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> callback <span class="token operator">=</span> args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>disabled <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u961F\u5217\u957F\u5EA6\u4E5F\u8D85\u8FC7\u9650\u5236\u503C\u65F6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queueLength <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>refuse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>
      <span class="token literal-property property">args</span><span class="token operator">:</span> args<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Too much async call in queue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    err<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;TooMuchAsyncCallError&quot;</span><span class="token punctuation">;</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;full&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// next</span>
<span class="token class-name">Bagpipe</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>active <span class="token operator">&lt;</span> that<span class="token punctuation">.</span>limit <span class="token operator">&amp;&amp;</span> that<span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> req <span class="token operator">=</span> that<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    that<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>method<span class="token punctuation">,</span> req<span class="token punctuation">.</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// run</span>
<span class="token class-name">Bagpipe</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  that<span class="token punctuation">.</span>active<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> callback <span class="token operator">=</span> args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> called <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token comment">// inject logic</span>
  args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// anyway, clear the timer</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
      timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// if timeout, don&#39;t execute</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>called<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      that<span class="token punctuation">.</span>_<span class="token punctuation">;</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// pass the outdated error</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        that<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;outdated&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> timeout <span class="token operator">=</span> that<span class="token punctuation">.</span>options<span class="token punctuation">.</span>timeout<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// set called as true</span>
      called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      that<span class="token punctuation">.</span>_<span class="token punctuation">;</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// pass the exception</span>
      <span class="token keyword">var</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>timeout <span class="token operator">+</span> <span class="token string">&quot;ms timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      err<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;BagpipeTimeoutError&quot;</span><span class="token punctuation">;</span>
      err<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> method<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">args</span><span class="token operator">:</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li></ul>`,7),o=[e];function c(u,l){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","index.html.vue"]]);export{k as default};
