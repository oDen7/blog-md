import{_ as n,o as s,c as a,d as e}from"./app.13f0a594.js";const t={},o=e(`<h1 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h1><h3 id="var" tabindex="-1"><a class="header-anchor" href="#var" aria-hidden="true">#</a> var</h3><ul><li>\u4F5C\u7528\u57DF</li></ul><blockquote><p>\u51FD\u6570\u5185\u4F7F\u7528var\u58F0\u660E\u53D8\u91CF\u4E3A\u5C40\u90E8\u53D8\u91CF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Uncaught ReferenceError: message is not defined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u51FD\u6570\u5185\u4E0D\u4F7F\u7528var\u58F0\u660E\u53D8\u91CF\u4F1A\u63D0\u5347\u4E3A\u5168\u5C40\u53D8\u91CF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        message <span class="token operator">=</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hi&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u58F0\u660E\u63D0\u5347</li></ul><blockquote><p>\u53D8\u91CF\u58F0\u660E\u63D0\u5347\u81F3\u51FD\u6570\u4F5C\u7528\u57DF\u7684\u9876\u90E8.</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
    <span class="token comment">// \u7B49\u540C\u4E8E</span>
    <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> age<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
        age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>

    <span class="token comment">// \u53CD\u590D\u58F0\u660E\u4F1A\u88AB\u6700\u540E\u4E00\u6B21\u8D4B\u503C\u66FF\u4EE3</span>
    <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 36</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="let" tabindex="-1"><a class="header-anchor" href="#let" aria-hidden="true">#</a> let</h3><ul><li>\u4F5C\u7528\u57DF</li></ul><blockquote><p>\u5757\u7EA7\u4F5C\u7528\u57DF, {} \u5305\u88F9,\u5757\u4F5C\u7528\u57DF\u662F\u51FD\u6570\u4F5C\u7528\u57DF\u7684\u5B50\u96C6 javascript\u5F15\u64CE \u8BB0\u5F55\u53D8\u91CF\u58F0\u660E\u7684\u6807\u8BC6\u7B26\u6240\u5728\u7684\u5757\u4F5C\u7528\u57DF,\u5D4C\u5957\u4F7F\u7528\u4E0D\u4F1A\u62A5\u9519</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Matt&quot;</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Matt</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Matt</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&quot;Matt&quot;</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Matt</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>var\u548Clet\u4E0D\u80FD\u58F0\u660E\u540C\u540D\u53D8\u91CF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">var</span> a<span class="token punctuation">;</span>
   <span class="token keyword">var</span> b<span class="token punctuation">;</span> <span class="token comment">// Uncaught SyntaxError: Identifier &#39;a&#39; has already been declared</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6682\u65F6\u6027\u6B7B\u533A</li></ul><blockquote><p>let\u5728\u672A\u58F0\u660E\u60C5\u51B5\u4E0B\u4F7F\u7528\u4F1A\u62A5\u9519,\u53D8\u91CF\u4E0D\u4F1A\u88AB\u63D0\u5347</p></blockquote><div class="language-JavaScript ext-JavaScript line-numbers-mode"><pre class="language-JavaScript"><code>   console.log(name); // undefined
   var name = &quot;Matt&quot;; // \u88AB\u63D0\u5347

   console.log(age);
   let age = 26;   // \u4E0D\u63D0\u5347 
                   // Uncaught ReferenceError: age is not defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6761\u4EF6\u58F0\u660E</li></ul><blockquote><p>var\u53D8\u91CF\u4F1A\u88AB\u63D0\u5347,\u591A\u4F59\u58F0\u660E\u4F1A\u88ABJavaScript\u81EA\u52A8\u5408\u5E76 let \u4E0D\u4F1A\u88AB\u63D0\u5347,\u6240\u4EE5\u4E0D\u4F1A\u68C0\u67E5\u4E4B\u524D\u7684\u540C\u540D\u53D8\u91CF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u5B9E\u4F8B1</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Matt&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u6709\u63D0\u5347,\u4F1A\u88AB\u8986\u76D6</span>
        <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span> <span class="token comment">// \u6709\u540C\u540D,\u4F1A\u62A5\u9519</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u5B9E\u4F8B2</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Nicholas&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> name <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token keyword">let</span> name<span class="token punctuation">;</span> <span class="token comment">// name\u4F1A\u88AB\u9650\u5236\u5728\u5F53\u524D\u5757\u4E2D</span>
       <span class="token punctuation">}</span>

       name <span class="token operator">=</span> <span class="token string">&quot;Matt&quot;</span><span class="token punctuation">;</span>

       <span class="token keyword">try</span><span class="token punctuation">{</span>
           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 36</span>
       <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token keyword">let</span> age<span class="token punctuation">;</span>
           <span class="token comment">// age \u88AB\u9650\u5236\u5728\u5757\u513F\u4E2D</span>
       <span class="token punctuation">}</span>
       age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Matt</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 26</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>for\u5FAA\u73AF\u4E2D\u7684let\u58F0\u660E</li></ul><blockquote><p>var \u4F1A\u6E17\u900F\u5230\u51FD\u6570\u4F53\u5916\u90E8 let \u7684\u4F5C\u7528\u57DF\u4EC5\u9650for\u5FAA\u73AF\u5185\u90E8</p></blockquote><div class="language-JavaScript ext-JavaScript line-numbers-mode"><pre class="language-JavaScript"><code>    for(var i=0;i&lt;5;++i){
        setTimeout(()=&gt;console.log(i),0)
    }
    // \u5B9E\u9645\u8F93\u51FA 5\u30015\u30015\u30015\u30015
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u539F\u56E0:\u9000\u51FA\u5FAA\u73AF\u540E,\u8FED\u4EE3\u53D8\u91CF\u4FDD\u5B58\u7684\u662F\u5FAA\u73AF\u9000\u51FA\u7684\u503C.\u6267\u884C\u5B9A\u65F6\u5668,i\u4E3A\u540C\u4E00\u53D8\u91CF,\u8F93\u51FA\u540C\u4E00\u4E2A\u503C.</p></blockquote><h3 id="const" tabindex="-1"><a class="header-anchor" href="#const" aria-hidden="true">#</a> const</h3><blockquote><p>\u58F0\u660E\u5FC5\u987B\u521D\u59CB\u5316,\u6539\u53D8\u666E\u901A\u7C7B\u578B\u7684const\u53D8\u91CF\u4F1A\u62A5\u9519</p></blockquote><div class="language-JavaScript ext-JavaScript line-numbers-mode"><pre class="language-JavaScript"><code>   const a; // Uncaught SyntaxError: Missing initializer in const declaration

   const b =1;
   b=2; // Uncaught TypeError: Assignment to constant variable.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4E0D\u80FD\u91CD\u590D\u58F0\u660E</p></blockquote><div class="language-JavaScript ext-JavaScript line-numbers-mode"><pre class="language-JavaScript"><code>   const a =1;
   const a =2; // Uncaught SyntaxError: Identifier &#39;a&#39; has already been declared
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5757\u7EA7\u4F5C\u7528\u57DF</p></blockquote><div class="language-JavaScript ext-JavaScript line-numbers-mode"><pre class="language-JavaScript"><code>   const a =1;
   if(true){
        const a =2;
   }
   console.log(a); // 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>const \u63A5\u6536\u5BF9\u8C61\u6216\u6570\u7EC4\u65F6,\u6539\u53D8\u5C5E\u6027\u6216\u6570\u7EC4\u6210\u5458, const \u4E0D\u4F1A\u9650\u5236</p></blockquote><div class="language-JavaScript ext-JavaScript line-numbers-mode"><pre class="language-JavaScript"><code>   const arr = [1,2,3];
   arr[0] = 10;
   console.log(arr); // \xA0[10, 2, 3]
   
   const obj = {a:1,b:2,c:3};
   obj.a = 10;
   console.log(obj); // {a: 10, b: 2, c: 3}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5168\u5C40\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u58F0\u660E" aria-hidden="true">#</a> \u5168\u5C40\u58F0\u660E</h3><blockquote><p>var \u5728\u5168\u5C40\u4F5C\u7528\u57DF\u4F1A\u6210\u4E3Awindow\u5BF9\u8C61\u7684\u5C5E\u6027,let,const \u4E0D\u4F1A.</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Matt&quot;</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Matt&#39;</span>

   <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>

   <span class="token keyword">const</span> sex <span class="token operator">=</span> <span class="token string">&quot;\u7537&quot;</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><ol><li>var\u5B58\u5728\u53D8\u91CF\u63D0\u5347,const/let\u4E0D\u5B58\u5728</li><li>const,let\u5B58\u5728\u6682\u65F6\u6027\u6B7B\u533A,\u4F1A\u62A5\u9519,var\u4F1A\u62A5undefined</li><li>\u5728\u5168\u5C40\u4F5C\u7528\u57DF\u4E0B,var\u53D8\u91CF\u4F1A\u63D0\u5347\u5230\u6700\u9876\u90E8,\u6302\u5728\u5230window\u4E0A,let,const\u4E0D\u4F1A,\u6253\u5370window.\u53D8\u91CF\u65F6\u4E3Aundefined</li><li>var\u4E3A\u51FD\u6570\u4F5C\u7528\u57DF,\u63D0\u5347\u81F3\u51FD\u6570\u4F5C\u7528\u57DF\u9876\u90E8,let,const\u90FD\u4E3A\u5757\u7EA7\u4F5C\u7528\u57DF,\u82B1\u62EC\u53F7\u5305\u62EC\u5373\u4E3A\u5757,\u5757\u7EA7\u4F5C\u7528\u57DF\u662F\u51FD\u6570\u4F5C\u7528\u57DF\u7684\u5B50\u96C6.</li><li>const \u4E0D\u4F1A\u4FEE\u6539for\u5FAA\u73AF\u53D8\u91CF</li></ol>`,41),p=[o];function c(i,l){return s(),a("div",null,p)}var r=n(t,[["render",c],["__file","index.html.vue"]]);export{r as default};
